from collections import deque
from difflib import get_close_matches
import json  

# Inventario de productos
def cargar_inventario():
    try:
        with open("inventario.json", "r", encoding="utf-8") as archivo:
            return json.load(archivo)
    except Exception as e:
        print("‚ùå Error al cargar el inventario:", e)
        return []

# Inventario cargado desde "API local"
inventario = cargar_inventario()
# Cola para procesar b√∫squedas
cola_busquedas = deque()
# Pila para almacenar historial
historial = []

# Funci√≥n para recomendar ropa seg√∫n los filtros ingresados por el usuario
def recomendar_ropa(dato=None, talla=None, color=None):
    resultados = [
        articulo for articulo in inventario if 
        (dato in articulo["dato"].lower() if dato else True) and
        (articulo["talla"].lower() == talla if talla else True) and
        (articulo["color"].lower() == color if color else True)
    ]
    return sorted(resultados, key=lambda x: x["precio"])

# Mostrar sugerencias si no hay resultados
def sugerencias(dato):
    nombres = [art["dato"].lower() for art in inventario]
    coincidencias = get_close_matches(dato, nombres, n=3, cutoff=0.4)
    if coincidencias:
        print("\n¬øQuisiste decir?:")
        for sugerencia in coincidencias:
            print(f"- {sugerencia.title()}")


def procesar_busquedas():
    while cola_busquedas:
        entrada = cola_busquedas.popleft()
        historial.append(entrada)  

        # An√°lisis de entrada
        palabras = entrada.lower().split()
        colores = {"negro", "azul", "gris", "blanco", "rojo", "verde"}
        tallas = {"s", "m", "l", "xl", "42", "√∫nica"}

        color = next((p for p in palabras if p in colores), None)
        talla = next((p for p in palabras if p in tallas), None)
        dato = " ".join([p for p in palabras if p not in colores and p not in tallas]).strip()

        resultado = recomendar_ropa(dato, talla, color)

        # Mostrar resultados
        print("\nüîç Resultados de b√∫squeda:")
        if resultado:
            for prenda in resultado:
                precio_formateado = f"${prenda['precio']:,}".replace(",", ".")
                print(f"- {prenda['dato']} | Talla: {prenda['talla']} | Color: {prenda['color']} | Precio: {precio_formateado}")
        else:
            print("No se encontraron resultados.")
            if dato:
                sugerencias(dato)

# historial (√∫ltimas 5 b√∫squedas)
def ver_historial():
    print("\nHistorial de b√∫squedas:")
    if historial:
        for busqueda in reversed(historial[-5:]):
            print(f"- {busqueda}")
    else:
        print("No hay b√∫squedas registradas a√∫n.")

# Mostrar todo el inventario
def mostrar_inventario():
    print("\nInventario completo:")
    for prenda in inventario:
        precio_formateado = f"${prenda['precio']:,}".replace(",", ".")
        print(f"- {prenda['dato']} | Talla: {prenda['talla']} | Color: {prenda['color']} | Precio: {precio_formateado}")

# Modo interactivo
def iniciar():
    print("\nüëï Bienvenido al buscador de ropa")
    while True:
        entrada = input("\nEscribe tu b√∫squeda (Ej: 'camiseta negra m') o escribe 'historial', 'inventario' o 'salir': ").lower()

        if entrada == "salir":
            print("Gracias por usar el buscador. ¬°Hasta luego!")
            break
        elif entrada == "historial":
            ver_historial()
        elif entrada == "inventario":
            mostrar_inventario()
        elif entrada.strip() == "":
            print("Por favor, escribe algo para buscar.")
        else:
            cola_busquedas.append(entrada)
            procesar_busquedas()


if __name__ == "__main__":
    iniciar()
